#=========================================================================
# Application Name
#=========================================================================
spring.application.name=daleel


#=========================================================================
# Server Configuration
#=========================================================================
# Port where the application will run (default: 8080)
server.port=${SERVER_PORT:8000}

# Base URL path for all endpoints (e.g., http://localhost:8080/api/...)
server.servlet.context-path=/api


#=========================================================================
# Database Configuration
#=========================================================================
# PostgreSQL database connection URL
# Format: jdbc:postgresql://[host]:[port]/[database-name]
spring.datasource.url=${DB_URL}

# Database username
spring.datasource.username=${DB_USERNAME}

# Database password (change this in production)
spring.datasource.password=${DB_PASSWORD}

# PostgreSQL JDBC driver class
spring.datasource.driver-class-name=org.postgresql.Driver


#=========================================================================
# JPA/Hibernate Configuration
#=========================================================================
# Hibernate ddl auto (create, create-drop, validate, update)
# update: automatically update the schema
spring.jpa.hibernate.ddl-auto=update

# Show SQL queries in console/logs
spring.jpa.show-sql=false

# Format SQL queries for better readability
spring.jpa.properties.hibernate.format_sql=false

# Specify the PostgreSQL dialect for Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


#=========================================================================
# JWT (JSON Web Token) Configuration
#=========================================================================
# Secret key used to sign JWT tokens (change this in production)
# Should be at least 256 bits long for HS256 algorithm
jwt.secret=${JWT_SECRET}

# Token expiration time in milliseconds (24 hours = 24 * 60 * 60 * 1000)
jwt.expiration=${JWT_EXPIRATION}


#=========================================================================
# File Upload Configuration
#=========================================================================
# Enable multipart uploads
spring.servlet.multipart.enabled=true

# Maximum file size that can be uploaded
spring.servlet.multipart.max-file-size=10MB

# Maximum request size (should be greater than or equal to max-file-size)
spring.servlet.multipart.max-request-size=10MB

# Directory where uploaded files will be stored
file.upload-dir=${UPLOAD_DIR}
